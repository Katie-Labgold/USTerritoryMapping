name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "AK" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## AK State Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "AK", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## Hawaii ----
hi.map <- all.geo.data %>%
filter(group == "HI") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "HI" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## HI State Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "HI", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## Guam ----
gu.map <- all.geo.data %>%
filter(group == "GU") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "GU" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## GU Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "GU", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## American Samoa ----
as.map <- all.geo.data %>%
filter(group == "AS") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "AS" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## AS Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "AS", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## Northern Mariana Islands ----
nmi.map <- all.geo.data %>%
filter(group == "MP") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "MP" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## MP Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "MP", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## PR ----
pr.map <- all.geo.data %>%
filter(group == "PR") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "PR" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## PR Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "PR", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
## VI ----
VI.sttstj.map <- all.geo.data %>%
filter(group == "VI.stt_stj") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "VI.stt_stj" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## VI stt stj Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "VI.stt_stj", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
VI.stx.map <- all.geo.data %>%
filter(group == "VI.stx") %>%
ggplot() +
geom_sf(
aes(fill = get(fill_var)),
linewidth = fill_linewidth,
colour = fill_linecolor
) +
scale_fill_manual(values = fill_color,
na.value = "grey80",
name = legend_name) +
geom_sf(
data = all.geo.data[all.geo.data$group == "VI.stx" & all.geo.data$GEOID %in% border_ids, ],
fill = NA,
colour = border_color,
linewidth = border_linewidth
) +
## VI stx Border ---
geom_sf(
data = all.geo.state[all.geo.state$group == "VI.stx", ],
fill = NA,
colour = state_color,
linewidth = state_linewidth
) +
# Prevent ggplot from slightly expanding the map limits beyond the bounding box of the spatial objects
coord_sf(expand = FALSE) +
theme_void() +
theme(
# legend.justification defines the edge of the legend that the legend.position coordinates refer to
legend.justification = c(0, 1),
# Set the legend flush with the left side of the plot, and just slightly below the top of the plot
legend.position = "none"
) +
theme(
text = element_text(family = "Arial")
)
# add square for USVI ----
rect <- rectGrob(
x = unit(12.73, "in"),
#y = unit(1, "npc") - unit(1, "in"),
y = unit(1.6, "in"),
width = unit(1.6, "in"),
height = unit(1.25, "in"),
hjust = 0, vjust = 1,
gp = gpar(col = inset_box_color, fill = "transparent")
)
# Final Map ----
plot <-  ggdraw(main.map) +
# territory labels ----
draw_label("MP", x = 0.12, y = 0.24, fontface = "bold", color = territory_label_color) +
draw_label("GU", x = 0.175, y = 0.24, fontface = "bold", color = territory_label_color) +
draw_label("AS", x = 0.52, y = 0.034, fontface = "bold", color = territory_label_color) +
draw_label("VI", x = 0.893, y = 0.05, fontface = "bold", color = territory_label_color) +
draw_label("PR", x = 0.89, y = 0.2, fontface = "bold", color = territory_label_color) +
# Adding AK
draw_plot(
{
ak.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7), # if you want a border
plot.margin = unit(c(t = 0.5, r = 0.5, b = 0.5, l = 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.05,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.02,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.2,
height = 0.2) +
# Adding HI
draw_plot(
{
hi.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.239,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.02,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.15,
height = 0.15) +
# Adding GU
draw_plot(
{
gu.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7), # if you want a border
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.111,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.23,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.1,
height = 0.1) +
# Adding AS
draw_plot(
{
as.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7), # if you want a border
plot.margin = unit(c(0.4, 0.4, 0.4, 0.4), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.381,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = -0.0199,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.15,
height = 0.15) +
# Adding NMI
draw_plot(
{
nmi.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7), # if you want a border
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = -0.008,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.23,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.2,
height = 0.2) +
# Adding PR
draw_plot(
{
pr.map +
theme(legend.position = "none",
plot.background = element_rect(color = inset_box_color, linewidth = 0.7),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.8,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.175,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.1,
height = 0.1) +
# Adding VI (STT & STJ)
draw_plot(
{
VI.sttstj.map +
theme(legend.position = "none",
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.8,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.08,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.1,
height = 0.1) +
draw_plot(
{
VI.stx.map +
theme(legend.position = "none",
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm")) # testing different margins)
},
# The distance along a (0,1) x-axis to draw the left edge of the plot
x = 0.8,
# The distance along a (0,1) y-axis to draw the bottom edge of the plot
y = 0.02,
# The width and height of the plot expressed as proportion of the entire ggdraw object
width = 0.1,
height = 0.1) +
draw_grob(rect)
save_plot(filename = save.filepath,
plot = plot,
base_width = 15.91, # in
base_height = 9.1951 #
)
}
load("C:/Users/tqo3/USVI - Bureau of Information Technology/KL Project Folders/USTerritoryMapping/data/census.uninsured19.co.rda")
colors.census <- c("Less than 5%" = "#feebe2",
"5% to <10%" = "#f768a1",
"10% or Greater" = "#7a0177")
map1_categorical_county(data = census.uninsured19.co,
join_var = "GEOID",
county_data_year = "2020", # testing 2010 geometry
fill_var = "Percent.Cat",
fill_color = colors.census,
fill_linewidth = 0.5,
fill_linecolor = "gray50",
legend_name = "Percent Uninsured",
title = "Figure 1. Percent Uninsured, Ages <19 Years",
#border_ids = border,
#border_color = "red",
#border_linewidth = 0.5,
state_color = "black",
state_linewidth = 1,
save.filepath = "saved-maps/map2020-2024-07-10.png")
pacman::p_load(dplyr, ggplot2, sf, tidycensus, stringr, extrafont, cowplot, grid)
map1_categorical_county(data = census.uninsured19.co,
join_var = "GEOID",
county_data_year = "2020", # testing 2010 geometry
fill_var = "Percent.Cat",
fill_color = colors.census,
fill_linewidth = 0.5,
fill_linecolor = "gray50",
legend_name = "Percent Uninsured",
title = "Figure 1. Percent Uninsured, Ages <19 Years",
#border_ids = border,
#border_color = "red",
#border_linewidth = 0.5,
state_color = "black",
state_linewidth = 1,
save.filepath = "saved-maps/map2020-2024-07-10.png")
map1_categorical_county(data = census.uninsured19.co,
join_var = "GEOID",
county_data_year = "2020", # testing 2010 geometry
fill_var = "Percent.Cat",
fill_color = colors.census,
fill_linewidth = 0.5,
fill_linecolor = "gray50",
legend_name = "Percent Uninsured",
title = "Figure 1. Percent Uninsured, Ages <19 Years",
#border_ids = border,
#border_color = "red",
#border_linewidth = 0.5,
state_color = "black",
state_linewidth = 1,
save.filepath = "saved-maps/map2020-2024-07-10.png")
load("C:/Users/tqo3/USVI - Bureau of Information Technology/KL Project Folders/USTerritoryMapping/R/sysdata.rda")
map1_categorical_county(data = census.uninsured19.co,
join_var = "GEOID",
county_data_year = "2020", # testing 2010 geometry
fill_var = "Percent.Cat",
fill_color = colors.census,
fill_linewidth = 0.5,
fill_linecolor = "gray50",
legend_name = "Percent Uninsured",
title = "Figure 1. Percent Uninsured, Ages <19 Years",
#border_ids = border,
#border_color = "red",
#border_linewidth = 0.5,
state_color = "black",
state_linewidth = 1,
save.filepath = "saved-maps/map2020-2024-07-10.png")
map1_categorical_county(data = census.uninsured19.co,
join_var = "GEOID",
county_data_year = "2010", # testing 2010 geometry
fill_var = "Percent.Cat",
fill_color = colors.census,
fill_linewidth = 0.5,
fill_linecolor = "gray50",
legend_name = "Percent Uninsured",
title = "Figure 1. Percent Uninsured, Ages <19 Years",
#border_ids = border,
#border_color = "red",
#border_linewidth = 0.5,
state_color = "black",
state_linewidth = 1,
save.filepath = "saved-maps/map2010-2024-07-10.png")
remove.packages("USTerritoryMapping")
remove.packages("USTerritoryMapping")
?legend.positin
?ggplot::legend.position
?ggplot2::legend.position
